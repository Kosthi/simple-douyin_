// Code generated by hertz generator.

package feed

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	apiLog "github.com/prometheus/common/log"
	"simple-douyin/api/biz/client"
	mw "simple-douyin/api/biz/middleware"
	bizFeed "simple-douyin/api/biz/model/feed"
	"simple-douyin/kitex_gen/feed"
)

// Feed .
// @router /douyin/feed/ [GET]
func Feed(ctx context.Context, c *app.RequestContext) {
	var err error
	var bizReq bizFeed.FeedRequest
	resp := new(bizFeed.FeedResponse)
	err = c.BindAndValidate(&bizReq)
	if err != nil {
		apiLog.Error(err)
		resp.StatusCode = 57002
		if resp.StatusMsg == nil {
			resp.StatusMsg = new(string)
		}
		*resp.StatusMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
	}

	var userId = new(int64)
	apiLog.Info("Token: ", bizReq.GetToken())

	// 当前的策略的是，有token，进行鉴权，若非法（包含过期），则不返回视频；无token则正常返回视频
	if bizReq.Token != nil {
		claims, err := mw.JwtMiddleware.GetClaimsFromJWT(ctx, c)
		if err != nil {
			apiLog.Error(err)
			resp.StatusCode = 57002
			if resp.StatusMsg == nil {
				resp.StatusMsg = new(string)
			}
			*resp.StatusMsg = err.Error()
			c.JSON(consts.StatusBadRequest, resp)
			return
		}
		*userId = int64(claims[mw.IdentityKey].(float64))
	}

	apiLog.Info("userId: ", userId)
	apiLog.Info("latestTime: ", bizReq.GetLatestTime())
	req := feed.FeedRequest{
		UserId:     userId,
		LatestTime: bizReq.LatestTime,
	}

	resp, err = client.Feed(ctx, &req)

	if err != nil {
		apiLog.Error(err)
		resp.StatusCode = 57002
		if resp.StatusMsg == nil {
			resp.StatusMsg = new(string)
		}
		*resp.StatusMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}

	c.JSON(consts.StatusOK, resp)
}
